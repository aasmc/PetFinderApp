apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-kapt'
apply plugin: 'dagger.hilt.android.plugin'
apply plugin: "androidx.navigation.safeargs.kotlin"


android {
    compileSdkVersion rootProject.ext.compileSdkVersion

    defaultConfig {
        applicationId "ru.aasmc.petfinderapp"
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "ru.aasmc.petfinderapp.HiltTestRunner"

        javaCompileOptions {
            annotationProcessorOptions {
                arguments += [
                        "room.schemaLocation":"$projectDir/schemas".toString(),
                        "room.incremental":"true",
                        "room.expandProjection":"true"]
            }
        }

        Properties properties = new Properties()
        if (project.rootProject.file('local.properties').canRead()) {
            properties.load(project.rootProject.file("local.properties").newDataInputStream())
        }

        String API_KEY = properties.getProperty("API_KEY")
        String CLIENT_SECRET = properties.getProperty("CLIENT_SECRET")

        buildConfigField("String", "API_KEY", API_KEY)
        buildConfigField("String", "CLIENT_SECRET", CLIENT_SECRET)
    }

    buildTypes {
        debug {
            manifestPlaceholders = [usesCleartextTraffic:"true"]
        }
        release {
            manifestPlaceholders = [usesCleartextTraffic:"false"]
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    sourceSets {
        androidTest {
            assets.srcDirs = ["src/debug/assets"]
        }
    }

    compileOptions {
        coreLibraryDesugaringEnabled true

        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    buildFeatures {
        viewBinding true
    }

    testOptions {
        unitTests {
            includeAndroidResources = true
        }
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    // Kotlin
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"

    // Support Libraries
    implementation "androidx.appcompat:appcompat:$appcompat_version"
    implementation "androidx.constraintlayout:constraintlayout:$constraint_layout_version"
    implementation "androidx.lifecycle:lifecycle-runtime-ktx:$lifecycle_version"

    // Testing Dependencies
    testImplementation "junit:junit:$junit_version"
    testImplementation "com.google.truth:truth:$google_truth_version"
    testImplementation "org.mockito:mockito-core:$mockito_version"
    testImplementation "org.robolectric:robolectric:$robolectric_version"
    androidTestImplementation "com.google.truth:truth:$google_truth_version"
    androidTestImplementation "androidx.test.ext:junit:$androidx_junit_version"
    androidTestImplementation "androidx.test.espresso:espresso-core:$espresso_version"
    androidTestImplementation "androidx.arch.core:core-testing:$androidx_core_testing_version"

    // Dependencies for both test and AndroidTest
    debugImplementation "com.google.truth:truth:$google_truth_version"
    debugImplementation "androidx.arch.core:core-testing:$androidx_core_testing_version"
    debugImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:$coroutines_version"
    debugImplementation ("androidx.fragment:fragment-testing:$fragment_testing_version") {
        exclude group: 'androidx.test', module: 'monitor'
    }


    // TUTORIAL DEPENDENCIES HERE

    // Modules
    implementation project(":logging")

    // Network
    implementation "com.squareup.retrofit2:retrofit:$retrofit_version"
    implementation "com.squareup.retrofit2:converter-moshi:$moshi_converter_version"
    implementation "com.squareup.okhttp3:okhttp:$okHttp_version"
    implementation "com.squareup.okhttp3:logging-interceptor:$okHttp_version"
    implementation "com.squareup.moshi:moshi-kotlin:$moshi_version"
    kapt "com.squareup.moshi:moshi-kotlin-codegen:$moshi_version"

    testImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:$coroutines_version"
    androidTestImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:$coroutines_version"


    testImplementation("com.squareup.okhttp3:mockwebserver:$mockwebserver_version")
    androidTestImplementation("com.squareup.okhttp3:mockwebserver:$mockwebserver_version")

    // Cache
    implementation "androidx.room:room-runtime:$room_version"
    implementation "androidx.room:room-ktx:$room_version"
    implementation "androidx.room:room-rxjava2:$room_version"

    kapt "androidx.room:room-compiler:$room_version"

    testImplementation "androidx.room:room-testing:$room_version"

    // Concurrency
    implementation "io.reactivex.rxjava2:rxjava:$rxjava_version"
    implementation "io.reactivex.rxjava2:rxkotlin:$rxkotlin_version"
    implementation "io.reactivex.rxjava2:rxandroid:$rxandroid_version"

    // DI
    implementation "com.google.dagger:hilt-android:$hilt_version"
    kapt "com.google.dagger:hilt-android-compiler:$hilt_version"

    androidTestImplementation "com.google.dagger:hilt-android-testing:$hilt_version"
    kaptAndroidTest "com.google.dagger:hilt-android-compiler:$hilt_version"

    // UI
    implementation "com.github.bumptech.glide:glide:$glide_version"
    kapt "com.github.bumptech.glide:compiler:$glide_version"

    implementation "com.google.android.material:material:$material_version"

    // Navigation
    implementation "androidx.navigation:navigation-fragment-ktx:$nav_version"
    implementation "androidx.navigation:navigation-ui-ktx:$nav_version"

    // Lottie
    implementation "com.airbnb.android:lottie:5.0.1"

    // Dynamic animation
    implementation "androidx.dynamicanimation:dynamicanimation:1.0.0"

    androidTestImplementation "androidx.navigation:navigation-testing:$nav_version"

    // Utils
    coreLibraryDesugaring "com.android.tools:desugar_jdk_libs:$desugar_jdk_libs_version"

    debugImplementation "com.squareup.leakcanary:leakcanary-android:$leakcanary_version"
}
