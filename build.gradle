buildscript {

    ext {
        kotlin_version = '1.6.21'
        compileSdkVersion = 32
        targetSdkVersion = compileSdkVersion
        minSdkVersion = 26

        // Tutorial dependency versions
        appcompat_version = "1.5.1"
        lifecycle_version = '2.5.1'
        constraint_layout_version = "2.1.4"
        junit_version = "4.13.2"
        google_truth_version = '1.1.3'
        mockito_version = '4.7.0'
        mockwebserver_version = '4.10.0'
        robolectric_version = '4.8.2'
        androidx_junit_version = "1.1.3"
        androidx_core_testing_version = '2.1.0'
        espresso_version = "3.4.0"
        room_version = "2.4.3"
        rxjava_version = '2.2.21'
        rxkotlin_version = "2.4.0"
        rxandroid_version = "2.1.1"
        hilt_version = '2.44'
        nav_version = "2.5.3"
        retrofit_version = "2.9.0"
        okHttp_version = '4.10.0'
        moshi_converter_version = '2.9.0'
        moshi_version = '1.14.0'
        glide_version = '4.13.2'
        material_version = "1.7.0"
        leakcanary_version = '2.9.1'
        desugar_jdk_libs_version = '1.1.5'
        timber_version = '5.0.1'
        coroutines_version = '1.3.9'
        fragment_testing_version = '1.5.0'
        threetenabp_version = "1.3.1"
        security_version = "1.1.0-alpha03"
    }

    repositories {
        google()
        mavenCentral()
    }

    dependencies {
        classpath 'com.android.tools.build:gradle:7.2.1'
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        classpath "com.google.dagger:hilt-android-gradle-plugin:$hilt_version"

        classpath "androidx.navigation:navigation-safe-args-gradle-plugin:$nav_version"

        // NOTE: Do not place your application dependencies here; they belong
        // in the individual module build.gradle files
    }
}

allprojects {
    repositories {
        google()
        mavenCentral()
    }
}

subprojects {

    tasks.withType(org.jetbrains.kotlin.gradle.tasks.KotlinCompile).configureEach {
        kotlinOptions {
            // Enable experimental coroutines APIs, including Flow
            freeCompilerArgs += "-Xopt-in=kotlinx.coroutines.ExperimentalCoroutinesApi"
            freeCompilerArgs += "-Xopt-in=kotlinx.coroutines.FlowPreview"
            freeCompilerArgs += "-Xopt-in=kotlin.Experimental"
        }
    }
}

task clean(type: Delete) {
    delete rootProject.buildDir
}
